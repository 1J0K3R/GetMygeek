@using GetMygeek.Data
@using GetMygeek.Data.ORM
@inject IDatabaseService DatabaseService

<MudMessageBox @ref="mudMessageBox" Title="Description de la mission">
    <MessageContent>
        La mission en cours est réalisée chez <b> @Mission.Entreprise </b>

        <br />
        
        <b> @Mission.ResponsableMission </b> est responsable de cette mission.

        <br />
        <br />

        <MudButton Href="@Mission.FicheDePoste" Target="_blank" Variant="Variant.Filled" Color="Color.Success" Class="ml-5 mr-5">Acceder à la fiche de poste</MudButton>

    </MessageContent>
</MudMessageBox>

@code {
    /// <summary>
    /// Id du consultant pour lequel on souhaite récupérer la mission en cours
    /// </summary>
    [Parameter]
    public string IdConsultant { get; set; }

    /// <summary>
    /// Permet le référencement du Popup 
    /// </summary>
    private MudMessageBox mudMessageBox;

    /// <summary>
    /// Objet de la mission implémenté par la base de donnée
    /// </summary>
    private Mission Mission { get; set; }

    /// <summary>
    /// Permet au code appellant d'afficher la Popup
    /// </summary>
    /// <returns></returns>
    public async Task ShowAsync(long? idMission)
    {
        Mission = await GetMissionBySqlRequestAsync(idMission);

        await mudMessageBox.ShowAsync();
    }

    private async Task<Mission> GetMissionBySqlRequestAsync(long? idMission)
    {
        // Récupération de la mission avec l'IdConsultant
        Mission resultMission = await DatabaseService.GetMissionAsync(idMission);

        return resultMission;
    }
}
